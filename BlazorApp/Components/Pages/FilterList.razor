@page "/filter/{id?}"
@inject IBoligService BoligService

<div class="main-wrapper">
    <!-- Banner Section Start -->
    <section class="inner-page-breadcrumb">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="breadcrumb-content position-relative">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#" class="text-decoration-none text-white">Home</a></li>
                            <li class="breadcrumb-item active text-white" aria-current="page">Listing</li>
                        </ul>
                        <h1 class="breadcrumb-title text-white"></h1>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Banner Section End -->
    <div style="width:20%; border:1px solid black;  margin-right:500px; float:left; position: fixed;">
    <label for="propertyType">Vælg Ejendomstype:</label>
        <select style="border-radius:10px" id="typeId" class="form-control"
                @bind="selectedPropertyType" @bind:event="onchange" @bind:after="OnFilterChanged">
            <option value="@PropertyType.Unknown" disabled selected>Select Type</option>
            <option value="@PropertyType.Hus">Hus</option>
            <option value="@PropertyType.Lejlighed">Lejlighed</option>
            <option value="@PropertyType.Sommerhus">Sommerhus</option>
        </select>
    <button>hej</button>
</div>

<div>
    @if (filteredProperties != null && filteredProperties.Any())
    {
        @foreach (var property in filteredProperties)
        {
            var firstImage = property.Pictures?.FirstOrDefault()?.PictureLink;
            <a href="@property.Id">
                <div style="width:80%; height:300px; border:solid 1px black; box-shadow:50px black; margin-top:50px; margin-left:300px; padding:20px;">
                    <div style="width:150px; height:150px; float:left; border:solid 1px black;">
                        <img src="@firstImage" style="width:150px; height:150px;" alt="Image" />
                    </div>
                    <div style="padding:25px; margin-left:200px; border: solid 1px black;">
                        <h4>@property.Title</h4> @property.Price Dkk-, <br />
                        <section>@property.Description</section>
                        <section>@property.Location</section>
                    </div>
                </div>
            </a>
        }
    }
    else
    {
        <p>Ingen ejendomme fundet.</p>
    }
</div>
</div>



@code {
    [Parameter]
    public string id { get; set; }  // Modtager ID fra URL'en

    private PropertyType selectedPropertyType = PropertyType.Unknown;  // Default filter (Unknown)
    private IEnumerable<Property> properties = null;
    private IEnumerable<Property> filteredProperties = null;
    private List<Pictures> pictures = null;
    private IEnumerable<Property> propertiesByid = null;
    protected override async Task OnInitializedAsync()
    {
        // Hent ejendomslisterne fra BoligService
        properties = BoligService.GetAllPropeties();
        pictures = await BoligService.GetAllPictures();

        // Tilknyt billeder til hver property
        foreach (var property in properties)
        {
            property.Pictures = pictures.Where(p => p.PropertyId == property.Id).ToList();
        }

        // Hvis der er et ID i URL'en, brug det til at opdatere filteret
        if (!string.IsNullOrEmpty(id))
        {
            if (Enum.TryParse(id, true, out PropertyType propertyType))
            {
                selectedPropertyType = propertyType;
            }
        }

        // Anvend filteret
        ApplyFilter();
    }

    private void OnFilterChanged()
    {
        // Opdater ejendomstype og anvend filteret
        ApplyFilter();
    }

    private void ApplyFilter()
    {
        // Filtrer ejendommene baseret på den valgte ejendomstype
        if (selectedPropertyType == PropertyType.Unknown)
        {
            filteredProperties = properties;  // Vis alle ejendommene
        }
        else
        {
            filteredProperties = properties.Where(p => (PropertyType)p.TypeId == selectedPropertyType);
            // Filtrer baseret på valgt type
        }
    }
   
    }
