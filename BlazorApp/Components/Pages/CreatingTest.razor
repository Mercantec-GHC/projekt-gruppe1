 @page "/creat"
 @inject IBoligService BoligService

<div class="main-wrapper">
    <!-- Banner Section Start -->
    <section class="inner-page-breadcrumb">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="breadcrumb-content position-relative">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#" class="text-decoration-none text-white">Home</a></li>
                            <li class="breadcrumb-item active text-white" aria-current="page">Create Annonce</li>
                        </ul>
                        <h1 class="breadcrumb-title text-white">Create</h1>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Banner Section End -->

    <div class="main-wrapper">
        <div class="alert alert-success alert-dismissible fade show" role="alert"
             style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 1050;"
             hidden="@(!isSuccessMessageVisible)">
            Din "bolig er uploadet"
            <button type="button" class="btn-close" aria-label="Close" @onclick="() => isSuccessMessageVisible = false"></button>
        </div>


        <div class="main-wrapper">
            <section class="page-login-section pb-5" style="background-color: #353535">
                <div class="container">
                    <h1 class="text-center" style="color: ghostwhite">Fill out the form</h1>

                    <EditForm Model="@properties" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="card" style="background: #404040; border-radius: 15px;">
                            <div class="container">
                                <div class="mb-3">
                                    <label for="title" class="form-label">Titel</label>
                                    <InputText style="border-radius:10px" id="title" class="form-control" @bind-Value="properties.Title" required />
                                    @if (string.IsNullOrWhiteSpace(properties.Title))
                                    {
                                        <div class="text-danger">Du mangler at fylde Titel ud.</div>
                                    }
                                </div>
                                <select style="border-radius:10px" id="typeId" class="form-control"
                                        @bind-Value="properties.TypeId" @bind-Value:event="onchange">
                                    <option value="" disabled selected hidden>Select Type</option>
                                    <option value="1">Hus</option>
                                    <option value="2">Lejlighed</option>
                                    <option value="3">Sommerhus</option>
                                </select>

                                <br />

                                <div class="mb-3">
                                    <label for="price" class="form-label">Pris</label>
                                    <InputNumber style="border-radius:10px" id="price" class="form-control" @bind-Value="properties.Price" required />
                                    @if (properties.Price == null || properties.Price == 0)
                                    {
                                        <span class="text-danger">Du mangler at fylde Prisen ud</span>
                                    }
                                </div>


                                <div class="mb-3">
                                    <label for="year" class="form-label">År bygget</label>
                                    <InputNumber style="border-radius:10px" id="year" class="form-control" @bind-Value="properties.Year" required Max="2024" />
                                    @if (properties.Year == null || properties.Year == 0)
                                    {
                                        <span class="text-danger">Du mangler at fylde År byttet ud.</span>
                                    }

                                </div>

                                <div class="mb-3">
                                    <label for="squareMeters" class="form-label">kvadratmeter</label>
                                    <InputNumber style="border-radius:10px" id="squareMeters" class="form-control" @bind-Value="properties.SquareMeters" required />
                                    @if (properties.SquareMeters == null || properties.SquareMeters == 0)
                                    {
                                        <span class="text-danger">Du mangler at fylde Hvor mange Kvadratmeter ud</span>
                                    }
                                </div>

                                <div class="mb-3">
                                    <label for="location" class="form-label">lokation</label>
                                    <InputText style="border-radius:10px" id="location" class="form-control" @bind-Value="properties.Location" required />
                                    @if (string.IsNullOrWhiteSpace(properties.Location))
                                    {
                                        <span class="text-danger">Du mangler at udfylde lokation</span>
                                    }
                                </div>

                                <div class="mb-3">
                                    <label for="description" class="form-label">Beskrivelse</label>
                                    <InputTextArea style="border-radius:10px" id="description" class="form-control" @bind-Value="properties.Description" />
                                </div>


                                <div class="mb-3">
                                    <label for="roomsCount" class="form-label">Rum</label>
                                    <InputNumber style="border-radius:10px" id="roomsCount" class="form-control" @bind-Value="properties.RoomsCount" required />
                                    @if (properties.RoomsCount == null || properties.RoomsCount == 0)
                                    {
                                        <span class="text-danger">Du mangler at udfylde Hvor mange Room der er. </span>
                                    }
                                </div>

                                <div class="mb-3">
                                    <label for="ownerId" class="form-label">EjerId</label>
                                    <InputNumber style="border-radius:10px" id="ownerId" class="form-control" @bind-Value="properties.OwnerId" required />
                                    @if (properties.OwnerId == null || properties.OwnerId == 0)
                                    {
                                        <span class="text-danger">Skal udfyldes For lige nu. </span>
                                    }
                                </div>

                                <div class="mb-3">
                                    <label for="hasGarden" class="form-label">Have</label>
                                    <InputCheckbox style="border-radius:10px" id="hasGarden" class="form-check-input" @bind-Value="properties.HasGarden" />
                                </div>

                                <div class="mb-3">
                                    <label for="numberOfFloors" class="form-label">Etagse</label>
                                    <InputNumber style="border-radius:10px" id="numberOfFloors" class="form-control" @bind-Value="properties.NumberOfFloors" />
                                </div>

                                <div class="mb-3">
                                    <label for="hasGarage" class="form-label">Garage</label>
                                    <InputCheckbox style="border-radius:10px" id="hasGarage" class="form-check-input" @bind-Value="properties.HasGarage" />
                                </div>
                                <br />

                                <div class="mb-3">
                                    <label for="newPictureLink" class="form-label">Billede Link</label>
                                    <InputText style="border-radius:10px" id="newPictureLink" class="form-control" @bind-Value="newPictureLink" />
                                    <button type="button" class="btn btn-secondary mt-2" @onclick="AddPicture">Tilføj billede</button>
                                </div>
                                <h5 class="mt-4" style="color: ghostwhite">tilføjet billeder:</h5>
                                <ul>
                                    @if (pictures.Any())
                                    {
                                        foreach (var picture in pictures)
                                        {
                                            <li>
                                                @picture.PictureLink
                                                <button class="btn btn-danger btn-sm" @onclick="() => RemovePicture(picture)">Remove</button>
                                            </li>
                                        }
                                    }
                                    else
                                    {
                                        <li style="color: white;">Ingen billeder tilføjet.</li>
                                    }
                                </ul>
                                <br />
                                <br />
                            </div>
                        </div>
                        <br />
                        <div class="card" style="background: #404040; border-radius: 15px;">
                            <div class="container">
                                <h2 style="color: lightgray">Lejlighed specific</h2>

                                <div class="mb-3">
                                    <label for="floor" class="form-label">Etage</label>
                                    <InputNumber style="border-radius:10px" id="floor" class="form-control" @bind-Value="properties.Floor" />
                                </div>

                                <div class="mb-3">
                                    <label for="hasBalcony" class="form-label">Altan</label>
                                    <InputCheckbox style="border-radius:10px" id="hasBalcony" class="form-check-input" @bind-Value="properties.HasBalcony" />
                                </div>

                                <div class="mb-3">
                                    <label for="hasElevator" class="form-label">Elevator</label>
                                    <InputCheckbox style="border-radius:10px" id="hasElevator" class="form-check-input" @bind-Value="properties.HasElevator" />
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="card" style="background: #404040; border-radius: 15px;">
                            <div class="container">
                                <h2 style="color: ghostwhite">Summerhus specific</h2>
                                <div class="mb-3">
                                    <label for="isSeasonal" class="form-label">Sæson</label>
                                    <InputCheckbox style="border-radius:10px" id="isSeasonal" class="form-check-input" @bind-Value="properties.IsSeasonal" />
                                </div>

                                <div class="mb-3">
                                    <label for="distanceToBeach" class="form-label">km/meters til strand</label>
                                    <InputNumber style="border-radius:10px" id="distanceToBeach" class="form-control" @bind-Value="properties.DistanceToBeach" />
                                </div>

                                <div class="mb-3">
                                    <label for="hasPrivatePool" class="form-label">Privat pool</label>
                                    <InputCheckbox style="border-radius:10px" id="hasPrivatePool" class="form-check-input" @bind-Value="properties.HasPrivatePool" />
                                </div>
                            </div>
                        </div>

                        <br />
                        <button type="submit" style="" class="btn btn-primary">Send</button>
                    </EditForm>
                </div>
            </section>
        </div>
    </div>
</div>

<!-- Required JS -->
<script src="js/bootstrap.bundle.min.js"></script>
<script src="js/jquery.min.js"></script>
<script src="js/owl.carousel.min.js"></script>
<script src="libs/fontawesome/js/all.js"></script>
<script src="js/isotope.pkgd.min.js"></script>
<script src="js/custom.js"></script>

<script>

    var TxtType = function (el, toRotate, period) {
        this.toRotate = toRotate;
        this.el = el;
        this.loopNum = 0;
        this.period = parseInt(period, 10) || 2000;
        this.txt = '';
        this.tick();
        this.isDeleting = false;
    };

    TxtType.prototype.tick = function () {
        var i = this.loopNum % this.toRotate.length;
        var fullTxt = this.toRotate[i];

        if (this.isDeleting) {
            this.txt = fullTxt.substring(0, this.txt.length - 1);
        } else {
            this.txt = fullTxt.substring(0, this.txt.length + 1);
        }

        this.el.innerHTML = '<span class="wrap">' + this.txt + '</span>';

        var that = this;
        var delta = 200 - Math.random() * 100;

        if (this.isDeleting) { delta /= 2; }

        if (!this.isDeleting && this.txt === fullTxt) {
            delta = this.period;
            this.isDeleting = true;
        } else if (this.isDeleting && this.txt === '') {
            this.isDeleting = false;
            this.loopNum++;
            delta = 500;
        }

        setTimeout(function () {
            that.tick();
        }, delta);
    };

    window.onload = function () {

        var elements = document.getElementsByClassName('typewrite');
        for (var i = 0; i < elements.length; i++) {
            var toRotate = elements[i].getAttribute('data-type');
            var period = elements[i].getAttribute('data-period');
            if (toRotate) {
                new TxtType(elements[i], JSON.parse(toRotate), period);
            }
        }

        // INJECT CSS

        var css = document.createElement("style");
        css.type = "text/css";
        css.innerHTML = ".typewrite > .wrap { border-right: 0.08em solid #fff}";
        document.body.appendChild(css);

    };
</script>
@code {

    private Property properties = new Property();
    private string newPictureLink;
    private List<Pictures> pictures = new List<Pictures>();
    private bool isSuccessMessageVisible = false;

    // Create a method to add a picture to the list
    private void AddPicture()

    {
        // Check if the input is not empty
        if (!string.IsNullOrEmpty(newPictureLink))
        {
            pictures.Add(new Pictures { PictureLink = newPictureLink });
            newPictureLink = string.Empty;
        }
    }

    // Create a method to remove a picture from the list
    private void RemovePicture(Pictures picture)
    {
        pictures.Remove(picture);
    }
    private void TypeidChecker()
    {
        if (properties.Floor > 0 || properties.HasElevator || properties.HasBalcony)
        {
            properties.TypeId = PropertyType.Lejlighed;
        }
        else if (properties.IsSeasonal || properties.DistanceToBeach > 0 || properties.HasPrivatePool)
        {
            properties.TypeId = PropertyType.Sommerhus;
        }
        else
        {
            properties.TypeId = PropertyType.Hus;
        }
    }

    // Create a method to handle the form submission
    private async Task HandleValidSubmit()
    {
        try
        {
            properties.Pictures = pictures;
            TypeidChecker();
            Console.WriteLine("Form submitted.");
            // Call the CreateAnnonceWithPicturesAsync method from the BoligService

            var propertyId = await BoligService.CreateAnnonceWithPicturesAsync(properties, pictures.Select(p => p.PictureLink).ToList());
            // Clear the form
            isSuccessMessageVisible = true;

            // Clear the form
            ClearForm();
        }
        catch (Exception ex)
        {
            // Log the error
            Console.WriteLine($"Error creating property: {ex.Message}");
        }

    }
    private void ClearForm()
    {
        properties = new Property();

        // Clear the pictures list
        pictures.Clear();

        // Reset the new picture link
        newPictureLink = string.Empty;
    }
}