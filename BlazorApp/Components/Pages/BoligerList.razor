@page "/boliger"
@inject IBoligService BoligService

<h3>House List</h3>

@if (houses == null)
{
    <span>Loading...</span>
}
else if (houses.Count == 0)
{
    <span>No houses found</span>
}
else
{
    <div class="house-list">
        @foreach (var house in houses)
        {
            <div class="house-card">
                <img src="@house.Pictures" alt="House Image" class="house-image" />
                <div class="house-details">
                    <h4>@house.Title</h4>
                    <p>@house.Description</p>
                    <p><strong>Price:</strong> @house.Price</p>
                    <p><strong>Location:</strong> @house.Location</p>
                    <p><strong>Created At:</strong> @house.CreatedAt</p>
                </div>
            </div>
        }
    </div>
}

<style>
    .house-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        padding: 20px;
    }

    .house-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        background-color: #fff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .house-card:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
    }

    .house-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .house-details {
        padding: 15px;
    }

    .house-details h4 {
        font-size: 1.2em;
        margin-bottom: 10px;
    }

    .house-details p {
        margin: 5px 0;
        font-size: 0.9em;
    }
</style>

@code {
    private List<House>? houses = null;

    protected override async Task OnInitializedAsync()
    {
        houses = await BoligService.GetAllHouses();

    }
}