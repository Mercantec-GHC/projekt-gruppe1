@page "/login"
@inject IBoligService BoligService
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient;
@inject IJSRuntime JSRuntime

<div class="main-wrapper">
    <!-- Banner Section Start -->
    <section class="inner-page-breadcrumb">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="breadcrumb-content position-relative">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-white">Home</a></li>
                            <li class="breadcrumb-item active text-white" aria-current="page">Login</li>
                        </ul>
                        <h1 class="breadcrumb-title text-white">Log ind & Tilmeld dig</h1>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Banner Section End -->

    <section class="page-login-section pb-5">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h3 class="login-title pt-4 pb-4 font-18">Log ind på din konto</h3>
                    <EditForm Model="@LoginUser" OnValidSubmit="Authenticate" FormName="loginForm">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <InputText type="email"
                                       class="form-control font-14"
                                       id="login-uemail"
                                       placeholder="Email Address"
                                       @bind-Value="LoginUser.Email" />
                            <ValidationMessage For="() => LoginUser.Email" />
                        </div>
                        <div class="mb-3">
                            <InputText type="password"
                                       class="form-control font-14"
                                       id="login-upass"
                                       placeholder="Adgangskode"
                                       @bind-Value="LoginUser.Password" />
                            <ValidationMessage For="() => LoginUser.Password" />
                        </div>

                        <div class="mb-3">
                            <span class="text-danger">@errorMessage</span>
                        </div>

                        <button type="submit" class="btn btn-warning login-btn">Login</button>
                    </EditForm>

                </div>

                <div class="col-md-6">
                    <h3 class="login-title pt-4 pb-4 font-18">Registrer din account</h3>
                    <EditForm Model="@RegisterUser" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <InputText type="text"
                                       class="form-control font-14"
                                       id="reg-uname"
                                       placeholder="Fulde Navn"
                                       @bind-Value="RegisterUser.Name" />
                            <ValidationMessage For="() => RegisterUser.Name" />
                        </div>
                        <div class="mb-3">
                            <InputText type="email"
                                       class="form-control font-14"
                                       id="reg-uemail"
                                       placeholder="Email Address"
                                       @bind-Value="RegisterUser.Email" />
                            <ValidationMessage For="() => RegisterUser.Email" />
                        </div>
                        <div class="mb-3">
                            <InputText type="number"
                                       class="form-control font-14"
                                       id="reg-tlf"
                                       placeholder="Telefonnummer"
                                       @bind-Value="RegisterUser.Phone" />
                            <ValidationMessage For="() => RegisterUser.Phone" />
                        </div>
                        <div class="mb-3">
                            <InputText type="password"
                                       class="form-control font-14"
                                       id="reg-upass"
                                       placeholder="Adgangskode"
                                       @bind-Value="RegisterUser.Password" />
                            <ValidationMessage For="() => RegisterUser.Password" />
                        </div>
                        <div class="mb-4">
                            <InputText type="password"
                                       class="form-control font-14"
                                       id="reg-uconpass"
                                       placeholder="Gentag adgangskode"
                                       @bind-Value="ConfirmPassword" />
                            <ValidationMessage For="() => ConfirmPassword" />
                        </div>
                        <div class="mb-3">
                            <span class="text-danger">@registrationErrorMessage</span>
                        </div>
                        <button type="submit" class="btn btn-warning login-btn">Register</button>
                    </EditForm>
                </div>
            </div>

        </div>
    </section>
</div>

@code {
    [SupplyParameterFromForm]
    public User LoginUser { get; set; } = new();
    private User RegisterUser { get; set; } = new();
    private string? ConfirmPassword { get; set; }
    private string? errorMessage;
    private string? registrationErrorMessage;

    private async Task Authenticate()
    {
        var result = await JSRuntime.InvokeAsync<Dictionary<string, object>>("loginUser", LoginUser.Email, LoginUser.Password);

        // Check if the login was successful or not
        if (result.Count == 1)
        {
            // If login is successful, navigate to the home page
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            // If login failed, display the error message
            errorMessage = "Invalid email or password. Please try again.";
        }
    }
    private async Task HandleRegistration()
    {
        // Validate that the passwords match
        if (RegisterUser.Password != ConfirmPassword)
        {
            registrationErrorMessage = "Passwords do not match.";
            return;
        }

        // Check if the email already exists in the database
        bool emailExists = await BoligService.EmailCheckAsync(RegisterUser);
        if (emailExists)
        {
            registrationErrorMessage = "The email address already exists. Please use a different email.";
            return;
        }

        // Call the user registration service to create a new user
        var result = await BoligService.CreateUserAsync(RegisterUser);

        // Check if the registration was successful
        if (result > 0)
        {
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            registrationErrorMessage = "Registration failed. Please try again.";
        }
    }
}