@page "/summerhouse"
@inject IBoligService BoligService

<h3>Summer House List</h3>

@if (summerhouses == null)
{
    <span>Loading...</span>
}
else if (!summerhouses.Any())
{
    <span>No summer houses found</span>
}
else
{
    <div class="container">
        <div class="row">
            @foreach (var summerhouse in summerhouses)
            {
                var firstImage = summerhouse.Pictures?.FirstOrDefault()?.PictureLink;

                <div class="col-md-4 mb-4">
                    <div class="card shadow-sm">
                        <img src="@firstImage" alt="Summer House Image" class="card-img-top" />
                        <div class="card-body">
                            <h5 class="card-title">@summerhouse.Title</h5>
                            <p class="card-text">@summerhouse.Description</p>
                            <ul class="list-unstyled">
                                <li><strong>Pris: </strong> @((int)summerhouse.Price ) Kr</li>
                                <li><strong>Location:</strong> @summerhouse.Location</li>
                                <li><strong>Størrelse:</strong> @summerhouse.SquareMeters m²</li>
                                <li><strong>Year:</strong> @summerhouse.Year</li>
                                <li><strong>Description:</strong> @summerhouse.Description</li>
                                <li><strong>Rum:</strong> @summerhouse.RoomsCount</li>
                                <li><strong>DistanceToBeach</strong> @summerhouse.DistanceToBeach</li>
                                <li><strong>Sæsonbolig:</strong> @(summerhouse.IsSeasonal ? "Ja" : "Nej")</li>
                                <li><strong>Pool</strong> @(summerhouse.HasPrivatePool ? "Ja" : "Nej")</li>
                                <li><strong>Created At:</strong> @summerhouse.CreatedAt</li>
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private IEnumerable<Property>? summerhouses = null;
    private List<Pictures>? pictures = null;

    protected override async Task OnInitializedAsync()
    {
        // type id = 3 - its Sommerhouse
        summerhouses = (BoligService.GetAllPropeties()).Where(i => i.PropertyType == PropertyType.Sommerhus);
        pictures = await BoligService.GetAllPictures();  

        foreach (var summerhouse in summerhouses)
        {
            summerhouse.Pictures = pictures.Where(p => p.PropertyId == summerhouse.Id).ToList(); 
        }
    }
}
